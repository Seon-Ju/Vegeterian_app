식품들의 바코드 인식을 통하여 영양성분을 인식하고 결과화면을 띄우는 역할을 하는 디렉토리이다. 메인 화면에서 바코드 버튼을 누르면 띄워지는 화면이고, BarcodeActivity를 먼저 실행한다.

1) BarcodeActivity.java

 - 라이브러리로 google의 firebase와 zxing을 썼다. firebase는 데이터베이스에 저장해놓은 가공식품들의 바코드 및 영양성분 정보를 활용하기 위해서 사용하였고, zxing은 어플에서 가공식품의 바코드를 인식하는데 사용하는 라이브러리이다.
 
 - onCreate : 액티비티가 생성될 때 제일 처음으로 실행되는 함수이다. 메인 액티비티에서 바코드 버튼을 눌렀을 때 바코드를 스캔할 수 있는 화면이 바로 나타난다. 이를 가능하게 하는 명령어가 Scan. 으로 선언된 명령어들이다.
 
 - onActivityResult : 스캔 명령어로 바코드를 인식하게 되면 onActivityResult 함수가 실행된다. 스캔한 바코드의 숫자정보를 result에 저장하고 result의 값에 따라 조건문을 나눈다. 바코드정보가 성공적이지 않거나 이상한 값이 인식이 된다면 화면을 종료시키고 재인식하도록 요청한다. 만약 성공적이라면 readFirebaseList 함수를 호출한다.
 
 - readFirebaseList : firebase에 있는 데이터베이스에 접근하도록 도와주는 함수이다. 매개변수로 찾고자 하는 정보를 받는다. 여기서는 바코드 정보를 매개변수로 받기 때문에 바로 아래에 orderByChild("barcode") 함수를 통해 바코드로 DB를 정렬하고, equalTo 함수로 동일한 바코드를 가지는 항목을 찾아낸다. 그 후 onDataChange 함수에서 바코드에 해당되는 정보들(상품명, 알레르기 유발 성분... 등)을 추출한뒤 result_fragment로 값을 넘겨준다.
 
 2)  result_fragment.java
 
 - BarcodeActivity에서 가공품의 영양정보들을 받아서 화면에 띄워주는 fragment이고 2학기에 개발할 예정이다.
